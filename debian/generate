#!/usr/bin/env python3

config_strings = [
  "small-f4-25000000",
  "small-f4-8000000"
]


import em
from contextlib import contextmanager

@contextmanager
def em_expansion(output_file):
    with open(output_file, "w") as output:
        interpreter = em.Interpreter(output=output)
        yield interpreter
        interpreter.shutdown()

def main():
    # Write out the install file lists for the library and example packages.
    for config_string in config_strings:
        with em_expansion("stm32plus-" + config_string + ".install") as e:
            e.updateGlobals({ "config_string": config_string + "e" })
            e.file(open("stm32plus-CONFIG.install.em", "r"))

        with em_expansion("stm32plus-" + config_string + "-examples.install") as e:
            e.updateGlobals({ "config_string": config_string + "e" })
            e.file(open("stm32plus-CONFIG-examples.install.em", "r"))

    # Top-level package configuration.
    with em_expansion("control") as e:
        e.updateGlobals({ "config_strings": config_strings })
        e.file(open("control.em", "r"))

    with em_expansion("rules") as e:
        e.updateGlobals({ "config_strings": config_strings })
        e.file(open("rules.em", "r"))

if __name__ == "__main__":
    main()
